/**
 * Simple Property Metabox JavaScript - NO CONFLICTS
 * 
 * @package RealEstate_Booking_Suite
 */

(function($) {
    'use strict';

    // Simple initialization - NO form interference
    $(document).ready(function() {
        console.log('ðŸ”§ SIMPLE METABOX: Initializing without conflicts');
        
        // Only handle number inputs
        initNumberInputs();
        
        // Only handle media uploads
        initMediaUploads();
        
        // Simple tab switching
        initSimpleTabs();
        
        // Restore tab state on page load
        restoreTabState();
        
        // Features and Amenities functionality
        initFeaturesAmenities();
        
        // Load existing features and amenities
        loadExistingFeaturesAmenities();
        
        // Update features/amenities before form submission
        $('form#post').on('submit', function() {
            updateFeaturesAmenitiesInputs();
            saveCurrentTab();
            console.log('Form submitting - features and amenities updated');
        });
        
        // DO NOT interfere with form submission otherwise
        console.log('ðŸ”§ SIMPLE METABOX: Ready - no form interference');
    });
    
    /**
     * Initialize number input controls
     */
    function initNumberInputs() {
        // Handle number input buttons
        $(document).on('click', '.resbs-number-btn', function(e) {
            e.preventDefault();
            
            var $btn = $(this);
            var action = $btn.data('action');
            var target = $btn.data('target');
            var $input = $('#' + target);
            
            if ($input.length) {
                var currentValue = parseInt($input.val()) || 0;
                var newValue = currentValue;
                
                if (action === 'increase') {
                    newValue = currentValue + 1;
                } else if (action === 'decrease' && currentValue > 0) {
                    newValue = currentValue - 1;
                }
                
                $input.val(newValue);
            }
        });
    }
    
    /**
     * Initialize media uploads
     */
    function initMediaUploads() {
        // Handle upload area clicks
        $(document).on('click', '.resbs-upload-area', function(e) {
            e.preventDefault();
            var $input = $(this).find('input[type="file"]');
            if ($input.length) {
                $input.click();
            }
        });
        
        // Handle file input changes
        $(document).on('change', 'input[type="file"]', function() {
            var files = this.files;
            if (files.length > 0) {
                console.log('Files selected:', files.length);
                // Basic file handling - no complex upload logic
            }
        });
    }
    
    /**
     * Simple tab switching - NO form interference
     */
    function initSimpleTabs() {
        // Handle tab button clicks
        $(document).on('click', '.resbs-tab-nav-btn', function(e) {
            e.preventDefault();
            
            var $btn = $(this);
            var targetTab = $btn.data('tab');
            
            if (targetTab) {
                // Hide all tab contents
                $('.resbs-tab-content').removeClass('active').hide();
                
                // Show target tab
                $('#' + targetTab).addClass('active').show();
                
                // Update button states
                $('.resbs-tab-nav-btn').removeClass('active');
                $btn.addClass('active');
                
                // Save tab state
                localStorage.setItem('resbs_active_tab', targetTab);
                
                console.log('Tab switched to:', targetTab);
            }
        });
    }
    
    /**
     * Initialize Features and Amenities functionality
     */
    function initFeaturesAmenities() {
        console.log('ðŸ”§ FEATURES: Initializing features and amenities');
        
        // Handle common features clicks
        $(document).on('click', '.resbs-suggestion-tag[data-feature]', function(e) {
            e.preventDefault();
            var feature = $(this).text().trim();
            addToFeaturesList(feature);
            console.log('Feature added:', feature);
        });
        
        // Handle common amenities clicks
        $(document).on('click', '.resbs-suggestion-tag[data-amenity]', function(e) {
            e.preventDefault();
            var amenity = $(this).text().trim();
            addToAmenitiesList(amenity);
            console.log('Amenity added:', amenity);
        });
        
        // Handle Add Feature button
        $(document).on('click', '#add-custom-feature', function(e) {
            e.preventDefault();
            var $input = $('#property_features_input');
            var feature = $input.val().trim();
            if (feature) {
                addToFeaturesList(feature);
                $input.val('');
            }
        });
        
        // Handle Add Amenity button
        $(document).on('click', '#add-custom-amenity', function(e) {
            e.preventDefault();
            var $input = $('#property_amenities_input');
            var amenity = $input.val().trim();
            if (amenity) {
                addToAmenitiesList(amenity);
                $input.val('');
            }
        });
        
        // Handle Enter key in feature input
        $(document).on('keypress', '#property_features_input', function(e) {
            if (e.which === 13) {
                e.preventDefault();
                var feature = $(this).val().trim();
                if (feature) {
                    addToFeaturesList(feature);
                    $(this).val('');
                }
            }
        });
        
        // Handle Enter key in amenity input
        $(document).on('keypress', '#property_amenities_input', function(e) {
            if (e.which === 13) {
                e.preventDefault();
                var amenity = $(this).val().trim();
                if (amenity) {
                    addToAmenitiesList(amenity);
                    $(this).val('');
                }
            }
        });
        
        // Handle remove feature/amenity
        $(document).on('click', '.resbs-remove-tag', function(e) {
            e.preventDefault();
            $(this).parent().remove();
            updateFeaturesAmenitiesInputs();
        });
    }
    
    /**
     * Add feature to the features list
     */
    function addToFeaturesList(feature) {
        var $container = $('#feature-tags-container');
        var $existingTags = $container.find('.resbs-feature-item');
        var exists = false;
        
        // Check if feature already exists
        $existingTags.each(function() {
            if ($(this).find('.resbs-tag-text').text().trim() === feature) {
                exists = true;
                return false;
            }
        });
        
        if (!exists) {
            var tagHtml = '<div class="resbs-feature-item">' +
                '<span class="resbs-tag-text">' + feature + '</span>' +
                '<button type="button" class="resbs-remove-tag">&times;</button>' +
                '</div>';
            $container.append(tagHtml);
            updateFeaturesAmenitiesInputs();
        }
    }
    
    /**
     * Add amenity to the amenities list
     */
    function addToAmenitiesList(amenity) {
        var $container = $('#amenity-tags-container');
        var $existingTags = $container.find('.resbs-amenity-item');
        var exists = false;
        
        // Check if amenity already exists
        $existingTags.each(function() {
            if ($(this).find('.resbs-tag-text').text().trim() === amenity) {
                exists = true;
                return false;
            }
        });
        
        if (!exists) {
            var tagHtml = '<div class="resbs-amenity-item">' +
                '<span class="resbs-tag-text">' + amenity + '</span>' +
                '<button type="button" class="resbs-remove-tag">&times;</button>' +
                '</div>';
            $container.append(tagHtml);
            updateFeaturesAmenitiesInputs();
        }
    }
    
    /**
     * Update the hidden inputs with current features and amenities
     */
    function updateFeaturesAmenitiesInputs() {
        // Update features input
        var features = [];
        $('#feature-tags-container .resbs-tag-text').each(function() {
            features.push($(this).text().trim());
        });
        var featuresString = features.join(', ');
        $('input[name="property_features"]').val(featuresString);
        console.log('Features updated:', featuresString);
        
        // Update amenities input
        var amenities = [];
        $('#amenity-tags-container .resbs-tag-text').each(function() {
            amenities.push($(this).text().trim());
        });
        var amenitiesString = amenities.join(', ');
        $('input[name="property_amenities"]').val(amenitiesString);
        console.log('Amenities updated:', amenitiesString);
        
        // Also update the hidden fields by ID
        $('#property_features').val(featuresString);
        $('#property_amenities').val(amenitiesString);
        
        console.log('Hidden fields updated - Features:', $('#property_features').val());
        console.log('Hidden fields updated - Amenities:', $('#property_amenities').val());
    }
    
    /**
     * Load existing features and amenities from hidden fields
     */
    function loadExistingFeaturesAmenities() {
        // Load existing features
        var existingFeatures = $('#property_features').val();
        if (existingFeatures && existingFeatures.trim() !== '') {
            var features = existingFeatures.split(',').map(function(feature) {
                return feature.trim();
            }).filter(function(feature) {
                return feature !== '';
            });
            
            features.forEach(function(feature) {
                addToFeaturesList(feature);
            });
            console.log('Loaded existing features:', features);
        }
        
        // Load existing amenities
        var existingAmenities = $('#property_amenities').val();
        if (existingAmenities && existingAmenities.trim() !== '') {
            var amenities = existingAmenities.split(',').map(function(amenity) {
                return amenity.trim();
            }).filter(function(amenity) {
                return amenity !== '';
            });
            
            amenities.forEach(function(amenity) {
                addToAmenitiesList(amenity);
            });
            console.log('Loaded existing amenities:', amenities);
        }
    }
    
    /**
     * Save current tab state
     */
    function saveCurrentTab() {
        var activeTab = $('.resbs-tab-nav-btn.active').data('tab');
        if (activeTab) {
            localStorage.setItem('resbs_active_tab', activeTab);
            console.log('Tab state saved:', activeTab);
        }
    }
    
    /**
     * Restore tab state on page load
     */
    function restoreTabState() {
        var savedTab = localStorage.getItem('resbs_active_tab');
        if (savedTab) {
            // Wait a bit for the page to fully load
            setTimeout(function() {
                var $tabBtn = $('.resbs-tab-nav-btn[data-tab="' + savedTab + '"]');
                if ($tabBtn.length) {
                    $tabBtn.click();
                    console.log('Tab state restored:', savedTab);
                }
            }, 100);
        }
    }

})(jQuery);
